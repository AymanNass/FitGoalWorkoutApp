{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/macuser/Desktop/FitGoalW/src/screens/ProfileScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { UserContext } from \"../context/UserContext\";\nimport { FirebaseContext } from \"../context/FirebaseContext\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nexport default function ProfileScreen() {\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      user = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var firebase = useContext(FirebaseContext);\n\n  var logOut = function logOut() {\n    var loggedOut;\n    return _regeneratorRuntime.async(function logOut$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.logOut());\n\n          case 2:\n            loggedOut = _context.sent;\n\n            if (loggedOut) {\n              setUser(function (state) {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  isLoggedIn: false\n                });\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, user.email), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, user.username), React.createElement(TouchableOpacity, {\n    onPress: logOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontSize: 17\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \" Logout \")));\n}","map":{"version":3,"sources":["/Users/macuser/Desktop/FitGoalW/src/screens/ProfileScreen.js"],"names":["React","useContext","UserContext","FirebaseContext","TouchableOpacity","ProfileScreen","user","setUser","firebase","logOut","loggedOut","state","isLoggedIn","email","username","color","fontSize"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;;;;AAEA,SAAOC,WAAP;AACA,SAAOC,eAAP;AACA,SAAQC,gBAAR,QAA+B,8BAA/B;AAEA,eAAe,SAASC,aAAT,GAAyB;AAEpC,oBAAuBJ,UAAU,CAACC,WAAD,CAAjC;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,QAAQ,GAAGP,UAAU,CAACE,eAAD,CAA3B;;AAEA,MAAMM,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACYD,QAAQ,CAACC,MAAT,EADZ;;AAAA;AACLC,YAAAA,SADK;;AAGX,gBAAGA,SAAH,EAAa;AACTH,cAAAA,OAAO,CAAC,UAACI,KAAD;AAAA,uDAAgBA,KAAhB;AAAuBC,kBAAAA,UAAU,EAAE;AAAnC;AAAA,eAAD,CAAP;AACH;;AALU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAQA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,IAAI,CAACO,KAAZ,CADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,IAAI,CAACQ,QAAZ,CAFJ,EAGI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEL,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,QAAQ,EAAE;AAA5B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,CAHJ,CADJ;AAWH","sourcesContent":["import React, {useContext} from 'react'\nimport { View, Button, Text } from 'react-native'\nimport{UserContext} from '../context/UserContext'\nimport{FirebaseContext} from '../context/FirebaseContext'\nimport {TouchableOpacity} from 'react-native-gesture-handler'\n\nexport default function ProfileScreen() {\n    \n    const [user, setUser] =useContext(UserContext)\n    const firebase = useContext(FirebaseContext)\n    \n    const logOut = async () =>{\n        const loggedOut= await firebase.logOut()\n\n        if(loggedOut){\n            setUser((state) => ({...state, isLoggedIn: false}));\n        }\n    }\n\n    return (\n        <View>\n            <Text>{user.email}</Text> \n            <Text>{user.username}</Text>\n            <TouchableOpacity onPress={logOut}\n        >       \n            <Text style={{ color: \"white\", fontSize: 17 }}> Logout </Text>\n        </TouchableOpacity>          \n        \n        </View>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}