{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/macuser/Desktop/FitGoalW/src/stacks/AppStackScreens.js\";\n\nimport React, { useContext } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AuthStackScreen from \"./AuthStackScreen\";\nimport MainStackScreen from \"./MainStackScreens\";\nimport LoadingScreen from \"../screens/LoadingScreen\";\nimport { UserContext } from \"../context/UserContext\";\nexport default AppStackScreens = function AppStackScreens() {\n  var AppStack = createStackNavigator();\n\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 1),\n      user = _useContext2[0];\n\n  return React.createElement(AppStack.Navigator, {\n    headerMode: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, user.isLoggedIn === null ? React.createElement(AppStack.Screen, {\n    name: \"Loading\",\n    component: LoadingScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }) : user.isLoggedIn ? React.createElement(AppStack.Screen, {\n    name: \"Main\",\n    component: MainStackScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }) : React.createElement(AppStack.Screen, {\n    name: \"Auth\",\n    component: AuthStackScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/macuser/Desktop/FitGoalW/src/stacks/AppStackScreens.js"],"names":["React","useContext","createStackNavigator","AuthStackScreen","MainStackScreen","LoadingScreen","UserContext","AppStackScreens","AppStack","user","isLoggedIn"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AAEA,SAAQC,oBAAR,QAAmC,yBAAnC;AAEA,OAAOC,eAAP;AACA,OAAOC,eAAP;AACA,OAAOC,aAAP;AAEA,SAAOC,WAAP;AAEA,eAAgBC,eAAe,GAAG,2BAAM;AAEpC,MAAMC,QAAQ,GAAGN,oBAAoB,EAArC;;AACA,oBAAcD,UAAU,CAACK,WAAD,CAAxB;AAAA;AAAA,MAAOG,IAAP;;AAEA,SACI,oBAAC,QAAD,CAAU,SAAV;AAAoB,IAAA,UAAU,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IAAI,CAACC,UAAL,KAAoB,IAApB,GACD,oBAAC,QAAD,CAAU,MAAV;AAAiB,IAAA,IAAI,EAAC,SAAtB;AAAgC,IAAA,SAAS,EAAEL,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,GAGGI,IAAI,CAACC,UAAL,GACJ,oBAAC,QAAD,CAAU,MAAV;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAA6B,IAAA,SAAS,EAAEN,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,GAIJ,oBAAC,QAAD,CAAU,MAAV;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAA6B,IAAA,SAAS,EAAED,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAeH,CApBD","sourcesContent":["import React, {useContext} from 'react'\n\nimportÂ {createStackNavigator} from '@react-navigation/stack' \n\nimport AuthStackScreen from './AuthStackScreen'\nimport MainStackScreen from './MainStackScreens'\nimport LoadingScreen from '../screens/LoadingScreen'\n\nimport{UserContext} from \"../context/UserContext\" \n\nexport default  AppStackScreens = () => {\n\n    const AppStack = createStackNavigator();\n    const [user] =useContext(UserContext)\n\n    return (\n        <AppStack.Navigator headerMode=\"none\">\n            {user.isLoggedIn === null ? (\n            <AppStack.Screen name=\"Loading\" component={LoadingScreen} />\n\n            ) : user.isLoggedIn ? (\n            <AppStack.Screen name=\"Main\" component={MainStackScreen} />\n\n            ) : (\n            <AppStack.Screen name=\"Auth\" component={AuthStackScreen} />\n            )\n        \n            }\n        </AppStack.Navigator>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}